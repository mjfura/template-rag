[mypy]
# Modo estricto general
strict = true

# Si quieres más control, puedes desglosar cada regla individualmente:

# Requiere que todas las funciones tengan tipos de entrada y salida anotados
disallow_untyped_defs = true

# Requiere que todas las llamadas a funciones sean a funciones con anotaciones de tipo
disallow_untyped_calls = true

# No permite la declaración de variables sin tipo explícito
disallow_incomplete_defs = true

# Deshabilita el uso implícito de `Optional` para valores que pueden ser `None`
no_implicit_optional = true

# Asegura que las variables tengan tipo, aún si no están inicializadas
disallow_untyped_globals = true

# Deshabilita la comparación suelta; solo permite comparaciones explícitas con `is` o `is not`
strict_equality = true

# Requiere que las variables locales tengan un tipo específico
local_partial_types = true

# Muestra advertencias sobre lanzamientos de tipos innecesarios
warn_redundant_casts = true

# Muestra advertencias sobre `assert` redundantes y código inalcanzable
warn_unreachable = true

# Muestra advertencias sobre `ignore` innecesarios
warn_unused_ignores = true

# Asegura que el `Optional` se maneje de forma explícita (sin None implícitos)
strict_optional = true

ignore_missing_imports = True

[mypy-streamlit.*]
ignore_missing_imports = True

[mypy-spacy.*]
ignore_missing_imports = True

[myoy-sentence_transformers.*]
ignore_missing_imports = True

[mypy-langchain_huggingface.*]
ignore_missing_imports = True
